#!/usr/bin/env ruby
# frozen_string_literal: true

require 'pp'
require 'optparse'
require 'ostruct'
require 'open3'
require 'yaml'
require 'base64'

opt = OpenStruct.new
OptionParser.new do |opts|
  opts.on('-s S', 'Secret name') { |s| opt.secret_file_or_name = s }
  opts.on('-k K', 'Key name')    { |k| opt.key = k }
  # print value for given key without eol
  opts.on('-D', 'Debug')         { opt.debug = true }
end.parse!
abort 'give me secret file|name' unless opt.secret_file_or_name

yml = if File.exist? opt.secret_file_or_name
        File.read opt.secret_file_or_name
      else
        cmd = "kubectl get secret #{opt.secret_file_or_name} -o yaml"
        out, err, st = Open3.capture3 cmd
        abort "ERR: #{err} #{st}" unless st.success?
        out
      end

secrets = YAML.safe_load(yml)['data']
if opt.key
  print Base64.decode64(secrets[opt.key])
else
  secrets.each do |k, v|
    puts format('%<k>s: %<v>s', k: k, v: Base64.decode64(v))
  end
end
